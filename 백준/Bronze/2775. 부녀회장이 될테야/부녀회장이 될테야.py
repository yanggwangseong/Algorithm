# 1 , 2, 3
# 조합 순서라는 개념이 존재하지 않는다.
# n개의 원소 중에서 r개를 뽑는 모든 경우를 살펴보는 알고리즘

# 첫째줄 k = a
# 둘째줄 n = b

# 2층의 1호에 살려면
# (a-1) = 1층의 1호부터 b호까지 = 1호까지
# 1층의 1호 사람들의 합
# 아파트 0층부터 있고 각층에는 1호부터 있으며
# 0층에 i호에는 i명이 산다
# 즉 1호 1명 2호 2명

# 입력 1 3
# 0층에서 1호부터 3호까지니까
# 1+2+3 총 6명

# 입력 2 3
# 1층에서 1호부터 3호까지
# 1층에 3호에 6명 살고 있음 위에서

# k가 1, n이 3
# 0층
# 1호 2호 3호
# 1명 2명 3명 = 6명

# k가 2, n이 3
# 1층
# 1호 2호 3호
# 1명 2명 6명인데 본인1명 해서 7명

# k는 1보다 크거나 같고 n은 14보다 작거나 같다
def calculate(k, n):
    # DP 테이블 생성
    dp = [[0] * (n + 1) for _ in range(k + 1)]
    
    
    # 0층 초기화: 0층 i호에는 i명이 산다
    for i in range(1, n + 1):
        dp[0][i] = i

    # 1층부터 k층까지 주민 수 채우기
    for i in range(1, k + 1):
        for j in range(1, n + 1):
            dp[i][j] = dp[i][j-1] + dp[i-1][j]
    
    
    return dp[k][n]

# 입력 받기
T = int(input())  # 테스트 케이스 개수

for _ in range(T):
    k = int(input())  # 층 수
    n = int(input())  # 호 수
    print(calculate(k, n))